from telegram import Update
from telegram.ext import CallbackContext, ConversationHandler, CallbackQueryHandler, CommandHandler, MessageHandler, Filters
from utils import EMOJI_SUCCESS, EMOJI_DANGER, EMOJI_BACK
from db_manager import get_specialist_by_id, get_services_by_specialist

(
    STATE_SERVICES,
    STATE_ADD_SERVICE_NAME,
    STATE_ADD_SERVICE_DURATION,
    STATE_ADD_SERVICE_PRICE,
    STATE_ADD_SERVICE_EMOJI,
    STATE_CONFIRM_ADD_SERVICE
) = range(6)

async def start_specialist(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    # –î–ª—è MVP: id —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ == user_id
    specialist = await get_specialist_by_id(user_id)
    if not specialist:
        await update.message.reply_text(
            "–í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        )
        return ConversationHandler.END
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {specialist['name']}! üòé\n\n–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å?",
        reply_markup=main_menu_specialist()
    )
    return ConversationHandler.END

async def show_services(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    services = await get_services_by_specialist(user_id)
    if not services:
        msg = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —É—Å–ª—É–≥. –î–æ–±–∞–≤–∏–º –ø–µ—Ä–≤—É—é? üòâ"
    else:
        msg = "–í–∞—à–∏ —É—Å–ª—É–≥–∏:\n\n"
        for s in services:
            msg += f"{s['emoji']} *{s['name']}* ‚Äî {s['duration']} –º–∏–Ω, {s['price']}‚ÇΩ\n"
    await update.callback_query.edit_message_text(
        msg,
        parse_mode="Markdown",
        reply_markup=main_menu_specialist()
    )
    return ConversationHandler.END

# –§—Ä–∞–≥–º–µ–Ω—Ç —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏ (–±—É–¥–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∞–Ω)
async def add_service_start(update: Update, context: CallbackContext):
    await update.callback_query.edit_message_text(
        "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —É—Å–ª—É–≥–∏:",
        reply_markup=confirm_cancel_keyboard("cancel_add_service", "cancel_add_service")
    )
    return STATE_ADD_SERVICE_NAME

# ... (–¥—Ä—É–≥–∏–µ —à–∞–≥–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥–∏)

specialist_handler = ConversationHandler(
    entry_points=[CallbackQueryHandler(start_specialist, pattern="i_am_specialist")],
    states={
        STATE_SERVICES: [
            CallbackQueryHandler(show_services, pattern="specialist_services"),
            CallbackQueryHandler(add_service_start, pattern="add_service"),
        ],
        # –û—Å—Ç–∞–ª—å–Ω—ã–µ —à–∞–≥–∏ ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—Å–ª—É–≥–∏, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä.
    },
    fallbacks=[
        CommandHandler("start", start_specialist),
    ],
    allow_reentry=True
)