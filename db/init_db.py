import aiosqlite
from core.settings import settings

async def init_db():
    async with aiosqlite.connect(settings.db_file) as db:
        await db.execute("""
        CREATE TABLE IF NOT EXISTS specialists (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            name TEXT NOT NULL,
            avatar TEXT,
            bio TEXT
        );
        """)
        await db.execute("""
        CREATE TABLE IF NOT EXISTS services (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            specialist_id INTEGER,
            name TEXT NOT NULL,
            duration INTEGER,
            price INTEGER,
            emoji TEXT,
            FOREIGN KEY (specialist_id) REFERENCES specialists(id)
        );
        """)
        await db.execute("""
        CREATE TABLE IF NOT EXISTS bookings (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            specialist_id INTEGER,
            service_id INTEGER,
            date TEXT,
            time TEXT,
            status TEXT DEFAULT 'booked'
        );
        """)
        await db.execute("""
        CREATE TABLE IF NOT EXISTS reviews (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            specialist_id INTEGER,
            text TEXT,
            stars INTEGER,
            created TEXT DEFAULT CURRENT_TIMESTAMP
        );
        """)
        await db.commit()

        # Seed test specialists and services if empty
        cursor = await db.execute("SELECT COUNT(*) FROM specialists")
        count = (await cursor.fetchone())[0]
        if count == 0:
            await db.execute(
                "INSERT INTO specialists (name, avatar, bio) VALUES (?, ?, ?)",
                ("–ò—Ä–∏–Ω–∞", "üíá‚Äç‚ôÄÔ∏è", "–ü–∞—Ä–∏–∫–º–∞—Ö–µ—Ä –≤—ã—Å—à–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –õ—é–±–ª—é —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—Ä–∞—Å–æ—Ç—É!"),
            )
            await db.execute(
                "INSERT INTO specialists (name, avatar, bio) VALUES (?, ?, ?)",
                ("–ú–∞—Ä–∏—è", "üíÜ‚Äç‚ôÄÔ∏è", "–û–ø—ã—Ç–Ω—ã–π –º–∞—Å—Ç–µ—Ä –ø–æ —É—Ö–æ–¥—É –∑–∞ –≤–æ–ª–æ—Å–∞–º–∏."),
            )
            await db.execute(
                "INSERT INTO specialists (name, avatar, bio) VALUES (?, ?, ?)",
                ("–û–ª—å–≥–∞", "üíÑ", "–°—Ç–∏–ª–∏—Å—Ç-–∫–æ–ª–æ—Ä–∏—Å—Ç. –ú–æ–∏ –ø—Ä–∏—á–µ—Å–∫–∏ ‚Äî –≤–∞—à–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!"),
            )
            await db.executemany(
                "INSERT INTO services (specialist_id, name, duration, price, emoji) VALUES (?, ?, ?, ?, ?)",
                [
                    (1, "–°—Ç—Ä–∏–∂–∫–∞ –∂–µ–Ω—Å–∫–∞—è", 40, 1500, "‚úÇÔ∏è"),
                    (1, "–£–∫–ª–∞–¥–∫–∞ –≤–æ–ª–æ—Å", 30, 1000, "üíÅ‚Äç‚ôÄÔ∏è"),
                    (1, "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ", 90, 3500, "üé®"),
                    (2, "–ú–∞—Å—Å–∞–∂ –≥–æ–ª–æ–≤—ã", 20, 700, "ü§≤"),
                    (2, "–õ–µ—á–µ–Ω–∏–µ –≤–æ–ª–æ—Å", 45, 2000, "üß¥"),
                    (3, "–í–µ—á–µ—Ä–Ω—è—è —É–∫–ª–∞–¥–∫–∞", 60, 2500, "üåü"),
                    (3, "–û–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ –ø—Ä—è–¥–µ–π", 55, 1800, "üñåÔ∏è"),
                ]
            )
            await db.commit()

async def optimize_db():
    async with aiosqlite.connect(settings.db_file) as db:
        await db.execute("CREATE INDEX IF NOT EXISTS idx_specialists_name ON specialists(name);")
        await db.execute("CREATE INDEX IF NOT EXISTS idx_services_name ON services(name);")
        await db.execute("CREATE INDEX IF NOT EXISTS idx_bookings_date_time ON bookings(date, time);")
        await db.commit()

async def seed_test_data():
    async with aiosqlite.connect(settings.db_file) as db:
        await db.execute("INSERT INTO bookings (user_id, specialist_id, service_id, date, time, status) VALUES (1, 1, 1, '2025-06-10', '10:00', 'booked');")
        await db.execute("INSERT INTO reviews (user_id, specialist_id, text, stars) VALUES (1, 1, '–û—Ç–ª–∏—á–Ω–æ!', 5);")
        await db.commit()